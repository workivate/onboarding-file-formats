version 1.1
@ignoreColumnNameCase
@separator ','
// Company ID: internal company ID, e.g., group policy number.
company_id: notEmpty and length(1, 36)
// Company name: name of the company as it should appear on the platform.
company_name: notEmpty and length(1, 255)
// Employee ID: unique within company, e.g., policy number. Optional if email is present.
employee_id: notEmpty or $email/notEmpty and length(*, 36)
// Email: user's email address, optional.
email: regex("^[\w!#$%&’*+/=?`{|}~^-]+(?:\.[\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-z0-9-]+\.)+[a-z]{2,63}$") @ignoreCase @optional
// User's first and last name, optional.
first_name: length(*, 255) @optional
last_name: length(*, 255) @optional
// The dates must all be in ISO 8601 format (date part only), i.e., YYYY-MM-DD.
// Activation date: when to activate the user's access, optional.
activation_date: xDate @optional
// Termination date: when to terminate the users's access, optional.
termination_date: xDate @optional
// Country code: user's country, 2 letter country code, uppercase, optional.
country_code: regex("^[A-Z]{2}$") @optional
// Locale: user's locale string in ISO/IEC 15897 format, e.g., en_GB, pt_BR, etc.
locale: regex("^[a-z]{2}_[A-Z]{2}$") @optional
// Job title, optional.
job_title: length(*, 255) @optional
// Group: for companies that organise users into groups, can be left empty if not relevant.
group: length(*, 255) @optional
// Gender: can be "male", "female" or "other", optional.
gender: is("male") or is("female") or is("other") @ignoreCase @optional
// Phone, mobile and work: user's mobile and work phone number, both optional.
phone_mobile: regex("^[0-9 +()x./-]+$") and length(*, 255) @optional
phone_work: regex("^[0-9 +()x./-]+$") and length(*, 255) @optional
// Birthday: user's date of birth, optional.
birthday: xDate @optional
// Work start date: when the employee started working for the company, optional.
work_start: xDate @optional
// Region of work of the individual
region: length(*, 255) @optional
// Sub region of work of the individual
sub_region: length(*, 255) @optional
// City of work of the individual
city: length(*, 255) @optional
// Location or site out of which the individual works
location_site: length(*, 255) @optional
// Work status of the individual (e.g. Active, STD, LTD, leave, terminated, etc)
work_status: length(*, 255) @optional
// Designation of whether or not the person manages individuals
management_status: length(*, 255) @optional
job_level: length(*, 255) @optional
// Highest level department/division/group of the individual
division: length(*, 255) @optional
// Second highest level department/division/group of the individual
division_sub1: length(*, 255) @optional
// Third highest level department/division/group of the individual
division_sub2: length(*, 255) @optional
// Fourth highest level department/division/group of the individual
division_sub3: length(*, 255) @optional
division_sub4: length(*, 255) @optional
division_sub5: length(*, 255) @optional
// Occupation of the individual
occupation: length(*, 255) @optional
// Union status of the individual (e.g. union, non-union)
union_status: length(*, 255) @optional
// Pay type of the individual (e.g. hourly, salary, commission)
pay_type: length(*, 255) @optional
// Salary of the individual
salary: length(*, 255) @optional
// Preferred language of communication for the individual (e.g. English, French, German, etc)
preferred_language: length(*, 255) @optional
// First custom demographic field of  the individual (unique to the organization)
custom_cut1: length(*, 255) @optional
// Second custom demographic field of  the individual (unique to the organization)
custom_cut2: length(*, 255) @optional
// Third custom demographic field of  the individual (unique to the organization)
custom_cut3: length(*, 255) @optional
// Fourth custom demographic field of  the individual (unique to the organization)
custom_cut4: length(*, 255) @optional
// Fifth custom demographic field of  the individual (unique to the organization)
custom_cut5: length(*, 255) @optional
// Indicates whether the user should be accessing by SSO or not
sso: length(*, 255) @optional
// Set of user roles, comma-separated
roles: length(*, 255) and regex("^(admin|super_admin|user|,)*$") @optional
